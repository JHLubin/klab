#!/usr/bin/python
def swap_seq(base_str, input_str, start):
    l = len(input_str)
    swap_out = start + l
    new_str = base_str[:start] + input_str + base_str[swap_out:]
    return new_str

def make_dna_from_pep(pep_seq):
    codons={'A':'GCT', 'C': 'TGC', 'D': 'GAC', 'E': 'GAG', 'F': 'TTT', 'G': 'GGA', 'H': 'CAC', 'I': 'ATC', 'K': 'AAA', 'L': 'CTT', 'M': 'ATG', 'N': 'AAT', 'P': 'CCA', 'Q': 'CAG', 'R': 'CGT', 'S': 'TCA', 'T': 'ACG', 'V': 'GTA', 'W': 'TGG', 'Y': 'TAC'}
    dna_seq = ''
    for i in pep_seq.upper():
        dna_seq += codons[i]
    return dna_seq

def mutate_site(dna_seq, start_frame, site_to_mutate, res):
    codons={'A':'GCT', 'C': 'TGC', 'D': 'GAC', 'E': 'GAG', 'F': 'TTT', 'G': 'GGA', 'H': 'CAC', 'I': 'ATC', 'K': 'AAA', 'L': 'CTT', 'M': 'ATG', 'N': 'AAT', 'P': 'CCA', 'Q': 'CAG', 'R': 'CGT', 'S': 'TCA', 'T': 'ACG', 'V': 'GTA', 'W': 'TGG', 'Y': 'TAC'}
    new_seq = swap_seq(dna_seq, codons[res.upper()], start_frame + (site_to_mutate -1) * 3)
    return new_seq

def inverse_compliment(dna_seq):
    compliments={'A':'T', 'C':'G', 'G':'C', 'T':'A'}
    new_seq = ''
    for i in dna_seq.upper()[::-1]:
        new_seq += compliments[i]
    return new_seq

def main():
    gbase='GGTGGAGGCGGTAGCGGAGGCGGAGGGTCGGATGAAATGGAAGAATGTGCTTCTCATTTGGGCAGTGATTATAAAGATGATGATGATAAAGGCAGTGAAAATTTGTATTTCCAATCTGGCAGTCATCATCATCATCATCATGGTGGGGGAGGCTCCGCTAGCATGGCGCCTATCGGCTCAGTAGTAATCGTAGGCAGAATCATCCTGTCCGGCCGTGGTGGCCCCATCACGGCGTACGCCCAGCAGACAAGGGGCCTCCTAGGGTGCATAATCACCAGCCTAACTGGCCGGGACAAAAACCAAGTGGAGGGTGAGGTCCAGATTGTGTCAACTGCTGCCCAAACCTTCCTGGCAACGTGCATCAATGGGGTGTGCTGGACTGTCTACCACGGGGCCGGAACGAGGACCATCGCGTCACCCAAGGGTCCTGTCATCCAGATGTATACCAATGTAGACCAAGACCTTGTGGGCTGGCCCGCTTCGCAAGGTACCCGCTCATTGACACCCTGCACTTGCGGCTCCTCGGACCTTTACCTGGTCACGAGGCACGCCGATGTCATTCCCGTGCGCCGGCGGGGTGATAGCAGGGGCAGCCTGCTGTCGCCCCGGCCCATTTCCTACTTGAAAGGCTCCTCGGGGGGTCCGCTGTTGTGCCCCGCGGGGCACGCCGTGGGCATATTTAGGGCCGCGGTGTGCACCCGTGGAGTGGCTAAGGCGGTGGACTTTATCCCTGTGGAGAACCTAGAGACAACCATGAGGTCGGGATCCGAACAAAAGCTTATTTCTGAAGAGGACTTG'
    start_sub=gbase.index('GATGAAATGGAAGAATGTGCT')
    start_prot=gbase.index('GGCTCAGTAGTAATCGTAGGCAGAATCATCCTGTCCGGCCGTGGTGGCCCCATCACGGCGTACGCCCAGCAGACAAGGGGCCTCCTAGGGTGCATAATCACCAGCCTAACTGGCCGGGACAAAAACCAAGTGGAGGGTGAGGTC')

    cedyf=make_dna_from_pep('cedyf')
    gb_cedyf=swap_seq(gbase,cedyf,start_sub)
    for n, i in enumerate(gbase):
        if i != gb_cedyf[n]:   
            print n, i, gb_cedyf[n]
    cedyf_mut = {138:'F', 183:'R',147:'A',151:'W',170:'Q'}
    for s, r in cedyf_mut.items():
        gb_cedyf=mutate_site(gb_cedyf, start_prot, s, r)
    gb_cedyf[start_prot:]
    # translated from DNA to peptide
    out='GSVVIVGRIILSGRGGPITAYAQQTRGLLGCIITSLTGRDKNQVEGEVQIVSTAAQTFLATCINGVCWTVYHGAGTRTIASPKGPVIQMYTNVDQDLVGWPASQGTRSLTPCTCGSSDLYLVTRHADVIPVRRRGDSFGSLLSPRPASYLWGSSGGPLLCPAGHAVGIFQAAVCTRGVAKAVRFIPVENLETTMRSGSEQKLISEEDL'
    gbase[start_prot:]
    wt_out='GSVVIVGRIILSGRGGPITAYAQQTRGLLGCIITSLTGRDKNQVEGEVQIVSTAAQTFLATCINGVCWTVYHGAGTRTIASPKGPVIQMYTNVDQDLVGWPASQGTRSLTPCTCGSSDLYLVTRHADVIPVRRRGDSRGSLLSPRPISYLKGSSGGPLLCPAGHAVGIFRAAVCTRGVAKAVDFIPVENLETTMRSGSEQKLISEEDL'
    for n, i in enumerate(out):
        if i !=wt_out[n]:
            print wt_out[n], n+1, i

    dvdar=make_dna_from_pep('dvdar')
    gb_dvdar=swap_seq(gbase,dvdar,start_sub)
    for n, i in enumerate(gbase):
        if i != gb_dvdar[n]:
            print n, i, gb_dvdar[n]
    dvdar_mut={175:'K',138:'I',171:'S',173:'I',183:'R',170:'Q'}
    for s, r in dvdar_mut.items():
        gb_dvdar=mutate_site(gb_dvdar, start_prot, s, r)
    gb_dvdar[start_prot:]
    out='GSVVIVGRIILSGRGGPITAYAQQTRGLLGCIITSLTGRDKNQVEGEVQIVSTAAQTFLATCINGVCWTVYHGAGTRTIASPKGPVIQMYTNVDQDLVGWPASQGTRSLTPCTCGSSDLYLVTRHADVIPVRRRGDSIGSLLSPRPISYLKGSSGGPLLCPAGHAVGIFQSAICKRGVAKAVRFIPVENLETTMRSGSEQKLISEEDL'
    for n, i in enumerate(out):
        if i !=wt_out[n]:
            print wt_out[n], n+1, i

    gb_cedyf
    'GGTGGAGGCGGTAGCGGAGGCGGAGGGTCGTGCGAGGACTACTTTTGTGCTTCTCATTTGGGCAGTGATTATAAAGATGATGATGATAAAGGCAGTGAAAATTTGTATTTCCAATCTGGCAGTCATCATCATCATCATCATGGTGGGGGAGGCTCCGCTAGCATGGCGCCTATCGGCTCAGTAGTAATCGTAGGCAGAATCATCCTGTCCGGCCGTGGTGGCCCCATCACGGCGTACGCCCAGCAGACAAGGGGCCTCCTAGGGTGCATAATCACCAGCCTAACTGGCCGGGACAAAAACCAAGTGGAGGGTGAGGTCCAGATTGTGTCAACTGCTGCCCAAACCTTCCTGGCAACGTGCATCAATGGGGTGTGCTGGACTGTCTACCACGGGGCCGGAACGAGGACCATCGCGTCACCCAAGGGTCCTGTCATCCAGATGTATACCAATGTAGACCAAGACCTTGTGGGCTGGCCCGCTTCGCAAGGTACCCGCTCATTGACACCCTGCACTTGCGGCTCCTCGGACCTTTACCTGGTCACGAGGCACGCCGATGTCATTCCCGTGCGCCGGCGGGGTGATAGCTTTGGCAGCCTGCTGTCGCCCCGGCCCGCTTCCTACTTGTGGGGCTCCTCGGGGGGTCCGCTGTTGTGCCCCGCGGGGCACGCCGTGGGCATATTTCAGGCCGCGGTGTGCACCCGTGGAGTGGCTAAGGCGGTGCGTTTTATCCCTGTGGAGAACCTAGAGACAACCATGAGGTCGGGATCCGAACAAAAGCTTATTTCTGAAGAGGACTTG'
    gb_dvdar
    'GGTGGAGGCGGTAGCGGAGGCGGAGGGTCGGACGTAGACGCTCGTTGTGCTTCTCATTTGGGCAGTGATTATAAAGATGATGATGATAAAGGCAGTGAAAATTTGTATTTCCAATCTGGCAGTCATCATCATCATCATCATGGTGGGGGAGGCTCCGCTAGCATGGCGCCTATCGGCTCAGTAGTAATCGTAGGCAGAATCATCCTGTCCGGCCGTGGTGGCCCCATCACGGCGTACGCCCAGCAGACAAGGGGCCTCCTAGGGTGCATAATCACCAGCCTAACTGGCCGGGACAAAAACCAAGTGGAGGGTGAGGTCCAGATTGTGTCAACTGCTGCCCAAACCTTCCTGGCAACGTGCATCAATGGGGTGTGCTGGACTGTCTACCACGGGGCCGGAACGAGGACCATCGCGTCACCCAAGGGTCCTGTCATCCAGATGTATACCAATGTAGACCAAGACCTTGTGGGCTGGCCCGCTTCGCAAGGTACCCGCTCATTGACACCCTGCACTTGCGGCTCCTCGGACCTTTACCTGGTCACGAGGCACGCCGATGTCATTCCCGTGCGCCGGCGGGGTGATAGCATCGGCAGCCTGCTGTCGCCCCGGCCCATTTCCTACTTGAAAGGCTCCTCGGGGGGTCCGCTGTTGTGCCCCGCGGGGCACGCCGTGGGCATATTTCAGTCAGCGATCTGCAAACGTGGAGTGGCTAAGGCGGTGCGTTTTATCCCTGTGGAGAACCTAGAGACAACCATGAGGTCGGGATCCGAACAAAAGCTTATTTCTGAAGAGGACTTG'
    gb_cedyf_amp_f = gb_cedyf[:40]
    'GGTGGAGGCGGTAGCGGAGGCGGAGGGTCGTGCGAGGACT'
    gb_cedyf_amp_r = inverse_compliment(gb_cedyf[-40:])
    'CAAGTCCTCTTCAGAAATAAGCTTTTGTTCGGATCCCGAC'
    gb_dvdar_amp_f = gb_dvdar[:40]
    'GGTGGAGGCGGTAGCGGAGGCGGAGGGTCGGACGTAGACG'
    gb_dvdar_amp_r = inverse_compliment(gb_dvdar[-40:])
    'CAAGTCCTCTTCAGAAATAAGCTTTTGTTCGGATCCCGAC'
    # Reverse primers are the same. If we cut down to 30, forward primers are the same
    # I think it's better anyway--40bp melting temp was very high
    'GGTGGAGGCGGTAGCGGAGGCGGAGGGTCG'
    cutting_primer_f # the 40 res downstream of protease end
    'GAACAAAAGCTTATTTCTGAAGAGGACTTGTTCGAACACG'
    cutting_primer_r # the 40 res upstream of substrate start, inverse_compliment
    'CGACCCTCCGCCTCCGCTACCGCCTCCACCAGAGCCTCCT'
    # Melting temp is a bit high for the cutting reverse, shorten to 
    'CGACCCTCCGCCTCCGCTACCGCCTCCACCAG'
    # DVDAR->DVDAS primers
    swap_f
    'GGGTCGGATGAAATGGAATCATGTGCTTCTCATTTGGGC'
    swap_r # inverse_compliment of forward
    'GCCCAAATGAGAAGCACATGATTCCATTTCATCCGACCC'

if __name__ == '__main__':
    main()