61 65 88 89 114 
5-EU, 5-AmU
Y65AFGLSV, ?F89?
Y65 priority G (A), uridine, 5amu, 5eu, (c35, cyclo, dzu)
5-AMU, Azide-C3-Uridin, Diazirine-Uridine, Cyclopropene-Uridine

Catalytic:
PDB: 	33 62 169 174
Pose:	15 36 143 148

mutable:
	first try:
PDB:  	61 65 88 89 114 
Pose: 	35 39 62 63 88
	second try:
PDB: 	29,30,63,65,68,72,73,76,77,79,80,81,82,83,84,112,117,136,137,138,166,169,170,173,175,176,181,184,185,188,189,192
Pose:	11,12,37,39,42,46,47,50,51,53,54,55,56,57,58, 86, 91,110,111,112,140,143,144,147,149,150,155,158,159,162,163,166


packable:
	first try:
60,62-64,66-67,81-87,90-91,94,112-113,115-117,119,134-139,174
	second try:
PDB: 	28,31,32,34,61,66,67,69,71,74,75,77,78,80,58,111,113,116,118,139,162,165,167,171,172,177,180,182,183,186,187,190,191,193,196,197
Pose: 	10,13,14,16,35,40,41,43,45,48,49,51,52,54,32, 85, 87, 90, 92,113,136,139,141,145,146,151,154,156,157,160,161,164,165,167,170,171

/home/skhare/Generate_ligens_example

README:
"""
Steps to generate rotamer ensemble

1. Start from your ligand PDB (of one conformation). Generate .mol file using PyMol or babel or any other program. Set M ROOT <atomno> in .mol file.

2. Use Ian's molfile_to_params.py from mini/src/python/apps/public to generate initial params file. Save the LG_0001.pdb or equivalent file it generates. If using this for unnatural aa rotamers, make a copy of the params file and edit the new params file to make it like a ligand (remove all references to protein, replace TYPE to LIGAND, so on, and delete last four lines in the ICOORD section that he marks out as default). use this param file for steps 3 onward. When done add "PDB_ROTAMERS rotlib_file_name" to the amino-acid param file, and it should work.

3. Edit params file to add  a line starting with PROTON_CHI after each CHI you want to vary. e.g. PROTON_CHI 5 SAMPLES 10 -70 -80 -90 -100 -110 70 80 90 100 110 EXTRA 0
   I usually specify every angle value explicitly and "EXTRA 0". This is not really a PROTON_CHI but is labeled as such to trick rosetta to make the ensemble. Leave or comment out the "real" PROTON_CHI lines depending on whether you want the protons to vary in your ensemble. See LGmod.params for example (starting .params file is LG.params)

4. Run the executable example_commandline.sh (~khare/mini_hack_ligrot/bin/generate_ligens.linuxiccrelease @genconf.flags -in:file::s LG_0001.pdb). Play around with -enzdes::rot_ensemble_ecutoff value in genconf.flags and re-run so that conformers you generate look reasonable.

5. The rotamer ensemble will be LG1.rotlib.pdb (<your lig name>.rotlib.pdb). Conformations have their fa_intra_rep energy in the REMARK preceding them and are separated by ENDMDL to allow movie-visualization in PyMol. Change ENDMDL to TER for actual use.

6. See example.log for a sample run (./example_commandline.sh). Files used are LG_0001.pdb, LGmod.params, and genconf.flags

Note 1:  Make sure the M ROOT is set  to the desired atom in the .mol file (this will determine how the torsions will move -- eg. in a torsion at1-at2-at3-at4 both at1 and at4 can in principle move, root will determine how the torsions are defined in the .params file and, therefore, which of at1 and at4 moves).

Note 2: Remember not to use the modified .params file for your regular runs. Use the one you started with.
"""

Saved starting monomers as mol2 files with PyMOL
cdkl; conda activate py2
python rosetta/Rosetta/main/source/scripts/python/public/molfile_to_params.py -n LG1 --chain B --root {whatever atom is C8} -p uck2_collaboration/params/{ligand} uck2_collaboration/ligands/{ligand}.mol2

python rosetta/Rosetta/main/source/scripts/python/public/molfile_to_params.py -n LG1 --chain B --root 18 -p uck2_collaboration/cyclo uck2_collaboration/ligands/cyclo.mol2

Copied params files for backup, edited with PROTON_CHI lines
Commented out the lines for the torsions within the molecule, only want the side chain
Description of those lines at https://www.rosettacommons.org/node/10021
Decreasing bins based on chi number to keep rotamer count reasonable. Started 20 degrees for chi_1, 30 for chi_2, 45 for chi_3, 60 for chi_4 and beyond. Exception: amide bonds had 180. No extra lines needed for 5eu and m5c. Found that Rosetta limits to 5000 conformers, so adjusted to fit.
Had to also change BOND_TYPE to BOND to accommodate older Rosetta version

Copied everything into $kl1/home/jhl133/uck2_collab
for i in 5amu 5cpu 5dzu 5eu c35amu cyclo m5c; do /home/skhare/Generate_ligens_example/generate_ligens.linuxiccrelease @/home/skhare/Generate_ligens_example/genconf.flags -in:file::s $i.pdb -extra_res_fa $i.params; mv LG1.rotlib.pdb $i.rotlib.pdb; done

Making cytidine molecules
Downloaded PDB with cytidine, pair fit aro ring to uridine template, delete everything else, bond, save as cytidine template after relabeling atoms
Open existing ligands, select removal, n. C1+C2+C3+C4+C5+C6+C7+C8+C9+O1+O2+O3+O4+O5+O6+H1+H2+H3+H4+H5+H6+H7+H8+H9+H10+H11+N1+N2
Removed all atoms, then opened cytidine template and created/bonded side groups.
Renamed nitrogens to accommodate one extra
Ran same params generation as above
Modified params file with same lines in uridine versions
Several had the numbering jumbled up in generating params... Adjusted PROTON_CHI lines appropriately

Starting models made with enzyme and ligand PDB generated with params file--atom names sometimes change when generating the params, so don't use the original ligand molecule.

record rosetta version for paper


To do:
	Design 6A shell around ligands
		Starting from: 
			WT
			Single-mutant
			Double-mutant
		Minimize before repacking (before starting FastRelax)
		Tabulate changes in designs
			Rank order
			List of substitutions
*	Screen tolerant sites around pocket for other substrates--relax with CST on, score difference
	Phosphorylates cytidines beter than uridines--compare relax energies

For comparing mutation sensitivities, used the command in amarel_relax_with_muts to run quick_relax_with_muts on Amarel. Ran with default cst weight and didn't see too much RMSD change, so let it go. Picked best decoy from each for comparison.

Since res 39 (Y65) and res 63 (F89) were relaxed in WT along with the mutants, the best decoys from each were taken together and the lowest from each was saved as the relaxed_start for that substrate.
5amc_39Y_2.pdb
5amu_63F_2.pdb
5cpc_39Y_2.pdb
5cpu_63F_8.pdb
5dzc_63F_6.pdb
5dzu_39Y_1.pdb
5ec_39Y_5.pdb
5eu_39Y_0.pdb
c35amc_39Y_7.pdb
c35amu_39Y_7.pdb
cycloc_63F_7.pdb
cyclou_63F_8.pdb
m5c_63F_1.pdb
m5u_39Y_5.pdb
wtc_39Y_1.pdb
wtu_63F_2.pdb
These are the basis of comparison for the designs.

Analyzing designs with the following command:
for folder in uck2_collaboration/designing_enzyme/; do for ba in c u; do for va in 5am 5cp 5dz 5e c35am cyclo m5 wt; do lig=$va$ba; python protease_design/analyze_design_decoys.py -f $folder$lig -dc uck2_collaboration/relaxed_starts/$lig_relaxed.pdb -l uck2_collaboration/params/${lig}.params; done; done; done

Ran aggregated_summaries_script to get full report
Allowed 31 sites to be mutable
29,30,63,65,68,72,73,76,77,79,80,81,82,83,84,112,117,136,137,138,166,169,170,173,175,176,181,184,185,188,189,192
Started both from WT and all 32 to ALA, ~100 trajectories each
61 mutations identified in total, from 640 possibilities
No mutations to sites 30, 76, 77, 79, 80, 84, 136, 181, 192
289 sequences identified in total, from 4E41 possibilities
significant convergence

Sorted by ligand > sequence > score, and filtered down to top scorer for each unique sequence per ligand
Reviewed WT first to rule out artifacts

Noticed that I didn't have residue 89 mutable, but they'd tested it. Also should have 88. (Pose 62 + 63) Rerun design without catalytic, and prune out artifacts and unmutated sites
Add repack to res 94 (Pose 68).
Stop design on 29, 63, 72, 82, 173, 175, 185, 188 because artifacts/catalytic, and 30, 76, 77, 79, 80, 84, 136, 181, 192 because no mutations anyway
New mutable list: 65,68,73,79,81,83,88,89,112,117,137,138,166,170,176,184,189
158 unique sequences

WT had many changes in 166-189... seems like this whole area is junk from a specificity standpoint. F81Y seems a popular artifact, and Y112W.
For meaningful changes, Y65 and F89 were indeed the sites of the most noteworthy substitutions, consistent with your previous work. 
Upon closer review, many of the substitutions Rosetta suggested (residues 166-189) were related to changes around the part of the substrate opposite the side chain. These occurred for wild type cytidine and uridine. While changes to this region might be considered for attempts to favor uridines or cytidines, I did not see them affecting the side chain. Since I also did not see any that seemed fvorable for catalysis, I ignored them.
Larger side chains did not converge, even if sequence did. In come cases, top two models had different substrate conformers. For the best designs, I would hope to see a large energy difference favoring a single conformation over all others, while a flatter energy landscape for different conformations suggests that we haven't gotten there quite yet.
Since all significant mutations are to the same set of residues, and they're not making substantial improvements for these substrates, I get the impression that this structure isn't especially designable as it is. For next steps, we can consider structural changes.
5am
	 	Y65A + F89Y replaces H-bond to D62 but makes more space
		Y65S instead of A sometimes
		Possibly F83H
		Possibly Y112W or perhaps I, V (Y112W should be suspect, since it did occur in WT case)
		Designs
			
5cp
	 	Y65A is still popular, with some instances of G (no S)
		F89N is now more popular than F89Y, based on the placement of the side chain 
		Y112W correlates with F89N, while Y112T (some V) is most common with F89Y, based on the same side chain placement
		Other side chain conformations produce changes at residue F83 (A, N, G)
5dz 	
		Again, while sequences have converged, ligand structure has not.
		Y65A and G, and in most cases, F89Y
		F83G and A. These changes are to reduce clashes. H also seen.
		Y112W was more prominent than I or A
5e 	
		Almost convergence, as expected for immobile side chain
		Y65G, F89Y, Y112W
c35am
	 	Y65G and Y65A, and F89Y most favored
		F83 did not always change, but H and G were most favorable
		Y112W was favored over T, though the residue was mutated in all cases
cyclo
	 	Due to the bulkiness of the side chain, A and G were most favored at Y65 and F89, though F89Y did also happen
		In some cases, even F83 became a small residue to open space
		Y112W was prevalent, with some I
		These substrates were the only ones to see mutation L68A, which occurred for certain side chain orientations
m5 		
		Complete convergence, as expected for immobile side chain
		Y65A, F89Y, Y112W


10/2/19 meeting
May want phosphate back in model for designs
Make models with just selected substitutions for a sanity check
